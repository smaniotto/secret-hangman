{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "State",
  "type": "object",
  "required": [
    "game",
    "player"
  ],
  "properties": {
    "game": {
      "$ref": "#/definitions/GameState"
    },
    "player": {
      "$ref": "#/definitions/CanonicalAddr"
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "CanonicalAddr": {
      "$ref": "#/definitions/Binary"
    },
    "GameState": {
      "type": "object",
      "required": [
        "mistakes",
        "winner",
        "word",
        "word_length",
        "word_reveal"
      ],
      "properties": {
        "mistakes": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "winner": {
          "type": "boolean"
        },
        "word": {
          "type": "string"
        },
        "word_length": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "word_reveal": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LetterReveal"
          }
        }
      }
    },
    "LetterReveal": {
      "type": "object",
      "required": [
        "letter",
        "position"
      ],
      "properties": {
        "letter": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "position": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        }
      }
    }
  }
}
